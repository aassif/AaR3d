# Script generated by PGen.
# ------------------------------
# Build script for AaR3d project.
# Date : dim. 25. juil. 00:47:44 2010.

# Required CMake version.
cmake_minimum_required(VERSION 2.8)

# Project name.
project(AaR3d C CXX)

include("$ENV{DEVEL_PATH}/cmake/cmake-paths.txt")

set(CMAKE_CXX_FLAGS "/EHa")

if(CMAKE_GENERATOR MATCHES ".* Win64")
    add_definitions(-DAA_R3D_X64_LIBRARY)

    set(ARCHITECTURE_DIR x64)

    set(CMAKE_RELEASE_POSTFIX -x64)
    
    if(WIN32)
        set(CMAKE_DEBUG_POSTFIX -x64d)
    endif(WIN32)

    if(APPLE)
        set(CMAKE_DEBUG_POSTFIX -x64_debug)
    endif(APPLE)
else(CMAKE_GENERATOR MATCHES ".* Win64")
    set(ARCHITECTURE_DIR .)

    if(WIN32)
        set(CMAKE_DEBUG_POSTFIX d)
    endif(WIN32)

    if(APPLE)
        set(CMAKE_DEBUG_POSTFIX _debug)
    endif(APPLE)
endif(CMAKE_GENERATOR MATCHES ".* Win64")

# OpenGL dependency.
find_package(OpenGL REQUIRED) # GLEW

# GLEW dependency.
find_package(GLEW REQUIRED) # AaOpenGL

# AaToolkit dependency
find_package(AaToolkit REQUIRED)

# AaOpenGL dependency
find_package(AaOpenGL REQUIRED)
find_package(AaOpenGL-static REQUIRED)

# AaMesh dependency
find_package(AaMesh REQUIRED)

# Include directoires.
include_directories(
    include
    ${AAMESH_INCLUDE_DIR}
    ${OPENGL_INCLUDE_DIR}
    ${GLEW_INCLUDE_DIR}
    ${AATOOLKIT_INCLUDE_DIR}
    ${AAOPENGL_INCLUDE_DIR}
)

# Include files.
FILE(GLOB HEADER_FILES include/*.h)

# Source files.
FILE(GLOB SOURCE_FILES src/*.cc)

# Target generation.
add_library(AaR3d
    SHARED
    ${HEADER_FILES}
    ${SOURCE_FILES}
)

# Output paths.
set_target_properties(
    AaR3d
    PROPERTIES
    RUNTIME_OUTPUT_DIRECTORY_DEBUG   "${PROJECT_SOURCE_DIR}/bin/debug/${ARCHITECTURE_DIR}"
    RUNTIME_OUTPUT_DIRECTORY_RELEASE "${PROJECT_SOURCE_DIR}/bin/release/${ARCHITECTURE_DIR}"
    ARCHIVE_OUTPUT_DIRECTORY_DEBUG   "${PROJECT_SOURCE_DIR}/lib/debug/${ARCHITECTURE_DIR}"
    ARCHIVE_OUTPUT_DIRECTORY_RELEASE "${PROJECT_SOURCE_DIR}/lib/release/${ARCHITECTURE_DIR}"
    COMPILE_DEFINITIONS AA_R3D_BUILD_SHARED
)

# Target dependencies.
target_link_libraries(AaR3d
    ${OPENGL_LIBRARY}
    ${GLEW_LIBRARY}
    ${AAOPENGL_LIBRARY}
)

# Target generation.
add_library(AaR3d-static
    STATIC
    ${HEADER_FILES}
    ${SOURCE_FILES}
)

# Output paths.
set_target_properties(
    AaR3d-static
    PROPERTIES
    ARCHIVE_OUTPUT_DIRECTORY_DEBUG   "${PROJECT_SOURCE_DIR}/lib/debug/${ARCHITECTURE_DIR}"
    ARCHIVE_OUTPUT_DIRECTORY_RELEASE "${PROJECT_SOURCE_DIR}/lib/release/${ARCHITECTURE_DIR}"
)

# Target dependencies.
target_link_libraries(AaR3d-static
    ${OPENGL_LIBRARY}
    ${GLEW_LIBRARY}
    ${AAOPENGL_STATIC_LIBRARY}
)
